<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	<!-- DataSource: 데이터베이스의 정보를 가지고 있는 애. -->
	<bean id="ds" class="org.apache.commons.dbcp.BasicDataSource"
		p:driverClassName="oracle.jdbc.driver.OracleDriver"
		p:url="jdbc:oracle:thin:@localhost:1521:XE"
		p:username="hr"
		p:password="happy"
	/>
	<!-- 트랜잭션 적용시 코드 -->
	<tx:annotation-driven proxy-target-class="false"/>
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="ds"
	/>
	<!-- SqlSessionFactory -->
	<bean id="ssf" class="org.mybatis.spring.SqlSessionFactoryBean"
		p:dataSource-ref="ds"
	/>
	
	<!-- SqlSessionTemplate = DataSource + SqlSessionFactory -->
	
	<!-- Mapper 전송 -->
	<!-- <bean id="mapper"
		class="org.mybatis.spring.mapper.MapperFactoryBean"
		p:sqlSessionFactory-ref="ssf"
		p:mapperInterface="com.sist.dao.MusicMapper"
	/> -->
	<!-- 위 주석의 MapperFactoryBean은 bean태그 하나당 mapper를 하나씩 등록할때(id명칭은 각각 다르게줘야한다.),
		아래 MapperScannerConfigurer은 basePackage로 지정한 패키지의 mapper들을 모두 등록해준다.
		메모리 할당시에도 @autowired해도, 알아서 찾아준다.
	 -->
	<bean id="mapper"
		class="org.mybatis.spring.mapper.MapperScannerConfigurer"
		p:sqlSessionFactory-ref="ssf"
		p:basePackage="com.sist.dao"
	/>
</beans>
